buildscript {

    repositories {
        jcenter()
        maven { url 'https://clojars.org/repo' }
    }

    dependencies {
        classpath "com.steammachine.org:gradle.copy.plugin:0.9.0"
        classpath 'com.steammachine.org:gradle.plugins:0.9.3'
    }
}

repositories {
    jcenter()
    maven { url 'https://clojars.org/repo' }
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: "maven"
apply plugin: 'com.steammachine.org.gradle.copyresources.plugin'
apply plugin: 'com.steammachine.org.gradle.properties.plugins'


auxprops.set('deploy') {
    propertyFile file('publish.properties')
}


group = deploy.group
version = deploy.version

jar {
    manifest {
        attributes(
                "Implementation-Title": deploy.title,
                "Implementation-Version": deploy.version,
                "Description": deploy.description
        )
    }
}

/* только те тесты, что прогоняются при сборке */
test { filter { includeTestsMatching "*Check" } }

dependencies {
    compile 'org.junit.platform:junit-platform-engine:1.0.0'
    compile 'org.junit.jupiter:junit-jupiter-api:5.0.0'
    compile 'org.junit.platform:junit-platform-launcher:1.0.0'
    compile 'com.steammachine.org:common.utils:1.0.0'

    testCompile 'org.junit.jupiter:junit-jupiter-api:5.0.0'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.0.0'
    testRuntime 'org.junit.vintage:junit-vintage-engine:4.12.0'

    testCompile 'junit:junit:4.12'
    testCompile 'com.tngtech.java:junit-dataprovider:1.10.2'
    testCompile 'org.javassist:javassist:3.19.0-GA'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8


task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"

    manifest {
        attributes(
                "Implementation-Title": deploy.artifact,
                "Implementation-Version": deploy.version,
                "Description": deploy.sourcecode_description
        )
    }
}

def artefacts_publications_username = hasProperty('repo_user') ? repo_user : 'repo_user'
def artefacts_publications_password = hasProperty('repo_password') ? repo_password : 'repo_password'

publishing {
    repositories {
        maven {
            credentials {
                username = "${artefacts_publications_username}"
                password = "${artefacts_publications_password}"
            }
            url 'https://clojars.org/repo'
        }
    }

    publications {
        mavenJava(MavenPublication) {
            groupId deploy.group
            artifactId deploy.artifact
            version deploy.version
            from components.java

            artifact sourceJar
        }
    }
}

task buildandsources(dependsOn: [sourceJar, build]) {}

/*
task findbreaks(type: FileModifier) {
    rule(FunctionSubstitution) {
        find = '#BREAK'
        operation = {
            throw new IllegalStateException()
        }
    }
}
*/

//git tag -a v1.4 -m 'my version 1.4'
task tagCommandLine {
    doLast {
        println "git checkout release$deploy.version"
        println "git tag -a v$deploy.version " + " -m \"version $deploy.version\""
    }
}
